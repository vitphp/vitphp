<?php// +----------------------------------------------------------------------// | VitPHP// +----------------------------------------------------------------------// | 版权所有 2018~2021 石家庄萌折科技有限公司 [ http://www.vitphp.cn ]// +----------------------------------------------------------------------// | VitPHP是一款免费开源软件,您可以访问http://www.vitphp.cn/ 以获得更多细节。// +----------------------------------------------------------------------namespace app\index\controller;use think\db\Where;use think\facade\View;use vitphp\admin\controller\BaseController;use vitphp\admin\model\SystemMenu;use vitphp\admin\Tree;/** * @title 菜单管理 */class Menu extends BaseController{    /**     * @title 列表页     */    public function index()    {        //查询admin 菜单管理        $query = SystemMenu::order('sort', 'asc')            ->where("type='admin'")            ->order('id', 'asc');        //查询首页菜单管理        return $this->_list($query, false);    }    protected function _index_list_before(&$list)    {        /**         * 整理树形菜单         */        foreach ($list as $key => $value) {            $list[$key] = $value->toArray();        }        /**         * @param $tree         * @return array         * 匿名函数 整理子菜单IDs 用于删除时全部子菜单同时删除         */        $func = function (&$tree) use (&$func) {            $aids = [];            foreach ($tree as &$item) {                $ids = [];                $ids[] = $item['id'];                if (isset($item['_child'])) {                    $ids = array_merge($ids, $func($item['_child']));                }                $aids = array_merge($aids, $ids);                $item['son_ids'] = implode(',', $ids);            }            return $aids;        };        $tree = Tree::array2tree($list);        $func($tree);        $list = Tree::tree2list($tree);    }    /**     * @title 添加菜单     */    public function add()    {        $type = input('type');        $query = (new SystemMenu())->db();        View::assign('type',$type);        return $this->_form($query, 'form');    }    /**     * @title 修改菜单     */    public function edit()    {        $type = input('type');        $query = (new SystemMenu())->db();        View::assign('type',$type);        return $this->_form($query, 'form');    }    protected function _form_before($data)    {       $type = input('type');        if ($this->request->isGet()) {            $id = $this->request->get('id', false);            $map = [];            $id && $map['id'] = ['<>', $id];            $parents = SystemMenu::where(new Where($map))                ->order('sort asc,id asc')                ->where("type='{$type}'")                ->select();            foreach ($parents as $key => $value) {                $parents[$key] = $value->toArray();            }            $parents = Tree::array2list($parents, 'id', 'pid', '_child');            $pid = $this->request->get('pid', false);            if ($pid) {                View::assign('pid', $pid);            }            View::assign('parents', $parents);        }    }    /**     * @title 删除菜单     */    public function del()    {        $ids = $this->request->post('ids');        $query = SystemMenu::whereIn('id', $ids);        save_sys_log('删除菜单', null, session('admin.username'));        $this->_del($query, $ids);    }    /**     * @title 禁用/启用     */    public function change()    {        $id = $this->request->post('id');        $status = $this->request->post('status');        $query = (new SystemMenu())->db();        $this->_change($query, $id, ['status' => $status]);    }}